buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.2.RELEASE")
        classpath('se.transmode.gradle:gradle-docker:1.2')
        classpath 'net.researchgate:gradle-release:2.4.0'
    }
}

apply plugin: 'net.researchgate.release'
apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'idea'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    all*.exclude group: "org.slf4j", module: "slf4j-simple"
}

dependencies {
    compile 'org.apache.camel:camel-core:2.18.0',
            'org.apache.camel:camel-spring-boot:2.18.0'
    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    // end::jetty[]
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: '1.3.5.RELEASE'

    testCompile("junit:junit")

}

apply plugin: 'docker'

task buildDocker(type: Docker) {
    description = 'Build a Docker container with application jar'
    group = 'Docker'
    dependsOn build
    applicationName = 'camel-boot-shell'
    dockerfile = file('Dockerfile')
    push = false
    doFirst {
        delete stageDir
        copy {
            from jar
            into stageDir
        }
    }
}

task dockerRelease() {
    group = 'Docker'
    description = 'Build a Docker container including the newest applicaiton.jar, and push release tags to repo'
    dependsOn buildDocker
    tasks.buildDocker.push = true
    finalizedBy 'release'
}
